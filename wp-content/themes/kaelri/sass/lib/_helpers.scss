// EASING SHORTCUTS

$ease-in-quad:      cubic-bezier( 0.55, 0.085, 0.68, 0.53 );
$ease-in-cubic:     cubic-bezier( 0.55, 0.055, 0.675, 0.19 );
$ease-in-quart:     cubic-bezier( 0.895, 0.03, 0.685, 0.22 );
$ease-in-quint:     cubic-bezier( 0.755, 0.05, 0.855, 0.06 );
$ease-in-expo:      cubic-bezier( 0.95, 0.05, 0.795, 0.035 );
$ease-in-circ:      cubic-bezier( 0.6, 0.04, 0.98, 0.335 );

$ease-out-quad:     cubic-bezier( 0.25, 0.46, 0.45, 0.94 );
$ease-out-cubic:    cubic-bezier( 0.215, 0.61, 0.355, 1 );
$ease-out-quart:    cubic-bezier( 0.165, 0.84, 0.44, 1 );
$ease-out-quint:    cubic-bezier( 0.23, 1, 0.32, 1 );
$ease-out-expo:     cubic-bezier( 0.19, 1, 0.22, 1 );
$ease-out-circ:     cubic-bezier( 0.075, 0.82, 0.165, 1 );

$ease-in-out-quad:  cubic-bezier( 0.455, 0.03, 0.515, 0.955 );
$ease-in-out-cubic: cubic-bezier( 0.645, 0.045, 0.355, 1 );
$ease-in-out-quart: cubic-bezier( 0.77, 0, 0.175, 1 );
$ease-in-out-quint: cubic-bezier( 0.86, 0, 0.07, 1 );
$ease-in-out-expo:  cubic-bezier( 1, 0, 0, 1 );
$ease-in-out-circ:  cubic-bezier( 0.785, 0.135, 0.15, 0.86 );

// COMPATIBILITY
// Mixins and functions related to browser compatibility.

	// Clip Path
	@mixin clip-path ( $value ) {
		-webkit-clip-path: $value;
		clip-path: $value;
	}

// CLEAR

	@mixin clear-after {
		&::after {
			clear: both;
			display: block;
			content: '';
		}
	}

// FIRST & LAST MARGINS
// Specify that the first and last children of a containing element have no top or bottom margin, respectively. This is useful when the container already provides appropriate padding or margin around its contents.

	@mixin no-first-last-margins ( $first: 0, $last: 0 ) {
		& > *:first-child { margin-top:    $first; }
		& > *:last-child  { margin-bottom: $last;  }
	}

// LINK COLOR

	@mixin link-color($color, $hover: $color) {
		color: $color;
		// &:active { color: $color; }
		@if ( $hover != null ) {
			&:hover { color: $hover; }
		}
	}

	@mixin invisible-link() {
		@include link-color(inherit);
		text-decoration: inherit;
	}

// FLEXBOX SHORTCODES

	@mixin flex-layout ( $flex-direction: row, $flex-wrap: nowrap, $justify-content: flex-start, $align-items: stretch ) {
		display: flex;
		flex-direction:  $flex-direction ;
		flex-wrap:  $flex-wrap ;
		justify-content:  $justify-content ;
		align-items:  $align-items ;
	}

	@mixin flex-children ( $flex: 0 1 auto ) {
		& > * {
			flex:  $flex ;
		}
	}

// UNSTYLED LIST

	@mixin no-list-style {
		margin: 0;
		padding: 0;
		list-style: none;
	}

// ABSOLUTE CENTER

@mixin absolute-center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

// ABSOLUTE OVERLAY

	@mixin absolute-cover {
		position: absolute;
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
	}

// ZOOM ON HOVER

	@mixin hover-zoom( $scale: 1.1 ) {
		transform: scale(1);
		&:hover { transform: scale($scale); }
		transition:  transform .2s $ease-in-out-quad;
	}
// tweak to avoid webfont jiggle on zoom
	@mixin hover-zoom-text( $scale: 1.1 ) {
		transform: scale(1) translate3d( 0, 0, 0) perspective(1px);
		&:hover { transform: scale($scale); }
		transition:  transform .2s $ease-in-out-quad;
	}